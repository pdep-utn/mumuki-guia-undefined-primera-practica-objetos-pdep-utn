test "existe tom" {
	tom
}

test "existe jerry" {
	jerry
}

test "existe robotRaton" {
	robotRaton
}

test "tom entiende velocidad" {
	tom.velocidad()
}

test "jerry entiende velocidad" {
	jerry.velocidad()
}

test "robotRaton entiende velocidad" {
	robotRaton.velocidad()
}

test "tom entiende esMasVeloz" {
	tom.esMasVeloz(jerry)
}

test "tom entiende correrA" {
	tom.correrA(jerry)
}


test "velocidad incial de tom" {
	assert.equals(13, tom.velocidad())
}

test "velocidad incial de jerry" {
	assert.equals(7, jerry.velocidad())
}

test "velocidad del robotRaton" {
	assert.equals(8, robotRaton.velocidad())
}


test "tom inicialmente es m치s veloz que jerry" {
	assert.that(tom.esMasVeloz(jerry))
}

test "si tom corre a jerry, luego no es m치s veloz" {
	tom.correrA(jerry)
	assert.notThat(tom.esMasVeloz(jerry))
}


test "tom inicialmente es m치s veloz que robotRaton" {
	assert.that(tom.esMasVeloz(robotRaton))
}

test "si tom corre a robotRaton, luego no es m치s veloz" {
	tom.correrA(robotRaton)
	assert.notThat(tom.esMasVeloz(robotRaton))
}


test "tom NO tiene un atributo velocidad" {
	//TODO: Falta expectativa
	assert.notThat(tom.toString().contains("velocidad"))
}

test "jerry NO tiene un atributo velocidad" {
	//TODO: Falta expectativa
	assert.notThat(jerry.toString().contains("velocidad"))
}